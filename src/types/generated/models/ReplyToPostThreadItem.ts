/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Media } from './Media';
import {
    MediaFromJSON,
    MediaFromJSONTyped,
    MediaToJSON,
    MediaToJSONTyped,
} from './Media';

/**
 * 
 * @export
 * @interface ReplyToPostThreadItem
 */
export interface ReplyToPostThreadItem {
    /**
     * ID of the post to reply to (required for the first item in the thread)
     * @type {string}
     * @memberof ReplyToPostThreadItem
     */
    postId?: string;
    /**
     * Text content for the reply
     * @type {string}
     * @memberof ReplyToPostThreadItem
     */
    text?: string;
    /**
     * Media attachments for the reply
     * @type {Array<Media>}
     * @memberof ReplyToPostThreadItem
     */
    media?: Array<Media>;
}

/**
 * Check if a given object implements the ReplyToPostThreadItem interface.
 */
export function instanceOfReplyToPostThreadItem(value: object): value is ReplyToPostThreadItem {
    return true;
}

export function ReplyToPostThreadItemFromJSON(json: any): ReplyToPostThreadItem {
    return ReplyToPostThreadItemFromJSONTyped(json, false);
}

export function ReplyToPostThreadItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReplyToPostThreadItem {
    if (json == null) {
        return json;
    }
    return {
        
        'postId': json['postId'] == null ? undefined : json['postId'],
        'text': json['text'] == null ? undefined : json['text'],
        'media': json['media'] == null ? undefined : ((json['media'] as Array<any>).map(MediaFromJSON)),
    };
}

export function ReplyToPostThreadItemToJSON(json: any): ReplyToPostThreadItem {
    return ReplyToPostThreadItemToJSONTyped(json, false);
}

export function ReplyToPostThreadItemToJSONTyped(value?: ReplyToPostThreadItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'postId': value['postId'],
        'text': value['text'],
        'media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(MediaToJSON)),
    };
}

