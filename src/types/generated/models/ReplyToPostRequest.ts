/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Array<ReplyToPostThreadItem> } from './Array&lt;ReplyToPostThreadItem&gt;';
import {
    instanceOfArray<ReplyToPostThreadItem>,
    Array<ReplyToPostThreadItem>FromJSON,
    Array<ReplyToPostThreadItem>FromJSONTyped,
    Array<ReplyToPostThreadItem>ToJSON,
} from './Array&lt;ReplyToPostThreadItem&gt;';
import type { ReplyToPostRequest } from './ReplyToPostRequest';
import {
    instanceOfReplyToPostRequest,
    ReplyToPostRequestFromJSON,
    ReplyToPostRequestFromJSONTyped,
    ReplyToPostRequestToJSON,
} from './ReplyToPostRequest';

/**
 * @type ReplyToPostRequest
 * 
 * @export
 */
export type ReplyToPostRequest = Array<ReplyToPostThreadItem> | ReplyToPostRequest;

export function ReplyToPostRequestFromJSON(json: any): ReplyToPostRequest {
    return ReplyToPostRequestFromJSONTyped(json, false);
}

export function ReplyToPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReplyToPostRequest {
    if (json == null) {
        return json;
    }
    if (instanceOfArray<ReplyToPostThreadItem>(json)) {
        return Array<ReplyToPostThreadItem>FromJSONTyped(json, true);
    }
    if (instanceOfReplyToPostRequest(json)) {
        return ReplyToPostRequestFromJSONTyped(json, true);
    }

    return {} as any;
}

export function ReplyToPostRequestToJSON(json: any): any {
    return ReplyToPostRequestToJSONTyped(json, false);
}

export function ReplyToPostRequestToJSONTyped(value?: ReplyToPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfArray<ReplyToPostThreadItem>(value)) {
        return Array<ReplyToPostThreadItem>ToJSON(value as Array<ReplyToPostThreadItem>);
    }
    if (instanceOfReplyToPostRequest(value)) {
        return ReplyToPostRequestToJSON(value as ReplyToPostRequest);
    }

    return {};
}

