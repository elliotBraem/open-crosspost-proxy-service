/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseMetaRateLimit
 */
export interface ResponseMetaRateLimit {
    /**
     * Number of requests remaining in the current window
     * @type {number}
     * @memberof ResponseMetaRateLimit
     */
    remaining?: number;
    /**
     * Total number of requests allowed in the window
     * @type {number}
     * @memberof ResponseMetaRateLimit
     */
    limit?: number;
    /**
     * Timestamp when the rate limit resets (in seconds since epoch)
     * @type {number}
     * @memberof ResponseMetaRateLimit
     */
    reset?: number;
}

/**
 * Check if a given object implements the ResponseMetaRateLimit interface.
 */
export function instanceOfResponseMetaRateLimit(value: object): value is ResponseMetaRateLimit {
    return true;
}

export function ResponseMetaRateLimitFromJSON(json: any): ResponseMetaRateLimit {
    return ResponseMetaRateLimitFromJSONTyped(json, false);
}

export function ResponseMetaRateLimitFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseMetaRateLimit {
    if (json == null) {
        return json;
    }
    return {
        
        'remaining': json['remaining'] == null ? undefined : json['remaining'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'reset': json['reset'] == null ? undefined : json['reset'],
    };
}

export function ResponseMetaRateLimitToJSON(json: any): ResponseMetaRateLimit {
    return ResponseMetaRateLimitToJSONTyped(json, false);
}

export function ResponseMetaRateLimitToJSONTyped(value?: ResponseMetaRateLimit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'remaining': value['remaining'],
        'limit': value['limit'],
        'reset': value['reset'],
    };
}

