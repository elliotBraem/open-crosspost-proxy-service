/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreatePostRequestTargetsInner } from './CreatePostRequestTargetsInner';
import {
    CreatePostRequestTargetsInnerFromJSON,
    CreatePostRequestTargetsInnerFromJSONTyped,
    CreatePostRequestTargetsInnerToJSON,
    CreatePostRequestTargetsInnerToJSONTyped,
} from './CreatePostRequestTargetsInner';
import type { PostContent } from './PostContent';
import {
    PostContentFromJSON,
    PostContentFromJSONTyped,
    PostContentToJSON,
    PostContentToJSONTyped,
} from './PostContent';

/**
 * 
 * @export
 * @interface CreatePostRequest
 */
export interface CreatePostRequest {
    /**
     * Array of targets to post to (can be a single target)
     * @type {Array<CreatePostRequestTargetsInner>}
     * @memberof CreatePostRequest
     */
    targets: Array<CreatePostRequestTargetsInner>;
    /**
     * Content for the post(s)
     * @type {Array<PostContent>}
     * @memberof CreatePostRequest
     */
    content: Array<PostContent>;
}

/**
 * Check if a given object implements the CreatePostRequest interface.
 */
export function instanceOfCreatePostRequest(value: object): value is CreatePostRequest {
    if (!('targets' in value) || value['targets'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function CreatePostRequestFromJSON(json: any): CreatePostRequest {
    return CreatePostRequestFromJSONTyped(json, false);
}

export function CreatePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'targets': ((json['targets'] as Array<any>).map(CreatePostRequestTargetsInnerFromJSON)),
        'content': ((json['content'] as Array<any>).map(PostContentFromJSON)),
    };
}

export function CreatePostRequestToJSON(json: any): CreatePostRequest {
    return CreatePostRequestToJSONTyped(json, false);
}

export function CreatePostRequestToJSONTyped(value?: CreatePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'targets': ((value['targets'] as Array<any>).map(CreatePostRequestTargetsInnerToJSON)),
        'content': ((value['content'] as Array<any>).map(PostContentToJSON)),
    };
}

