/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Array<QuotePostThreadItem> } from './Array&lt;QuotePostThreadItem&gt;';
import {
    instanceOfArray<QuotePostThreadItem>,
    Array<QuotePostThreadItem>FromJSON,
    Array<QuotePostThreadItem>FromJSONTyped,
    Array<QuotePostThreadItem>ToJSON,
} from './Array&lt;QuotePostThreadItem&gt;';
import type { QuotePostRequest } from './QuotePostRequest';
import {
    instanceOfQuotePostRequest,
    QuotePostRequestFromJSON,
    QuotePostRequestFromJSONTyped,
    QuotePostRequestToJSON,
} from './QuotePostRequest';

/**
 * @type QuotePostRequest
 * 
 * @export
 */
export type QuotePostRequest = Array<QuotePostThreadItem> | QuotePostRequest;

export function QuotePostRequestFromJSON(json: any): QuotePostRequest {
    return QuotePostRequestFromJSONTyped(json, false);
}

export function QuotePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotePostRequest {
    if (json == null) {
        return json;
    }
    if (instanceOfArray<QuotePostThreadItem>(json)) {
        return Array<QuotePostThreadItem>FromJSONTyped(json, true);
    }
    if (instanceOfQuotePostRequest(json)) {
        return QuotePostRequestFromJSONTyped(json, true);
    }

    return {} as any;
}

export function QuotePostRequestToJSON(json: any): any {
    return QuotePostRequestToJSONTyped(json, false);
}

export function QuotePostRequestToJSONTyped(value?: QuotePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfArray<QuotePostThreadItem>(value)) {
        return Array<QuotePostThreadItem>ToJSON(value as Array<QuotePostThreadItem>);
    }
    if (instanceOfQuotePostRequest(value)) {
        return QuotePostRequestToJSON(value as QuotePostRequest);
    }

    return {};
}

