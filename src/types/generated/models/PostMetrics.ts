/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostMetrics
 */
export interface PostMetrics {
    /**
     * Number of retweets
     * @type {number}
     * @memberof PostMetrics
     */
    retweets?: number;
    /**
     * Number of quote tweets
     * @type {number}
     * @memberof PostMetrics
     */
    quotes?: number;
    /**
     * Number of likes
     * @type {number}
     * @memberof PostMetrics
     */
    likes?: number;
    /**
     * Number of replies
     * @type {number}
     * @memberof PostMetrics
     */
    replies?: number;
}

/**
 * Check if a given object implements the PostMetrics interface.
 */
export function instanceOfPostMetrics(value: object): value is PostMetrics {
    return true;
}

export function PostMetricsFromJSON(json: any): PostMetrics {
    return PostMetricsFromJSONTyped(json, false);
}

export function PostMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'retweets': json['retweets'] == null ? undefined : json['retweets'],
        'quotes': json['quotes'] == null ? undefined : json['quotes'],
        'likes': json['likes'] == null ? undefined : json['likes'],
        'replies': json['replies'] == null ? undefined : json['replies'],
    };
}

export function PostMetricsToJSON(json: any): PostMetrics {
    return PostMetricsToJSONTyped(json, false);
}

export function PostMetricsToJSONTyped(value?: PostMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'retweets': value['retweets'],
        'quotes': value['quotes'],
        'likes': value['likes'],
        'replies': value['replies'],
    };
}

