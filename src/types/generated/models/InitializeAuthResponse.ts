/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseMeta } from './ResponseMeta';
import {
    ResponseMetaFromJSON,
    ResponseMetaFromJSONTyped,
    ResponseMetaToJSON,
    ResponseMetaToJSONTyped,
} from './ResponseMeta';
import type { InitializeAuthResponseData } from './InitializeAuthResponseData';
import {
    InitializeAuthResponseDataFromJSON,
    InitializeAuthResponseDataFromJSONTyped,
    InitializeAuthResponseDataToJSON,
    InitializeAuthResponseDataToJSONTyped,
} from './InitializeAuthResponseData';

/**
 * 
 * @export
 * @interface InitializeAuthResponse
 */
export interface InitializeAuthResponse {
    /**
     * 
     * @type {InitializeAuthResponseData}
     * @memberof InitializeAuthResponse
     */
    data: InitializeAuthResponseData;
    /**
     * 
     * @type {ResponseMeta}
     * @memberof InitializeAuthResponse
     */
    meta?: ResponseMeta;
}

/**
 * Check if a given object implements the InitializeAuthResponse interface.
 */
export function instanceOfInitializeAuthResponse(value: object): value is InitializeAuthResponse {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function InitializeAuthResponseFromJSON(json: any): InitializeAuthResponse {
    return InitializeAuthResponseFromJSONTyped(json, false);
}

export function InitializeAuthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InitializeAuthResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': InitializeAuthResponseDataFromJSON(json['data']),
        'meta': json['meta'] == null ? undefined : ResponseMetaFromJSON(json['meta']),
    };
}

export function InitializeAuthResponseToJSON(json: any): InitializeAuthResponse {
    return InitializeAuthResponseToJSONTyped(json, false);
}

export function InitializeAuthResponseToJSONTyped(value?: InitializeAuthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': InitializeAuthResponseDataToJSON(value['data']),
        'meta': ResponseMetaToJSON(value['meta']),
    };
}

