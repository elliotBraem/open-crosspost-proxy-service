/* tslint:disable */
/* eslint-disable */
/**
 * Crosspost API
 * A secure proxy for social media APIs that allows authorized frontends to perform actions on behalf of users who have granted permission.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InitializeAuthRequest
 */
export interface InitializeAuthRequest {
    /**
     * The URI to redirect to after authentication
     * @type {string}
     * @memberof InitializeAuthRequest
     */
    redirectUri: string;
    /**
     * The OAuth scopes to request
     * @type {Array<string>}
     * @memberof InitializeAuthRequest
     */
    scopes?: Array<string>;
    /**
     * Optional state parameter for CSRF protection
     * @type {string}
     * @memberof InitializeAuthRequest
     */
    state?: string;
}

/**
 * Check if a given object implements the InitializeAuthRequest interface.
 */
export function instanceOfInitializeAuthRequest(value: object): value is InitializeAuthRequest {
    if (!('redirectUri' in value) || value['redirectUri'] === undefined) return false;
    return true;
}

export function InitializeAuthRequestFromJSON(json: any): InitializeAuthRequest {
    return InitializeAuthRequestFromJSONTyped(json, false);
}

export function InitializeAuthRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InitializeAuthRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'redirectUri': json['redirectUri'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function InitializeAuthRequestToJSON(json: any): InitializeAuthRequest {
    return InitializeAuthRequestToJSONTyped(json, false);
}

export function InitializeAuthRequestToJSONTyped(value?: InitializeAuthRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'redirectUri': value['redirectUri'],
        'scopes': value['scopes'],
        'state': value['state'],
    };
}

