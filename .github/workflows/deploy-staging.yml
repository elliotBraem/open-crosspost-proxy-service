name: Deploy to Staging

on:
  push:
    branches: [staging]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install types package dependencies
        working-directory: ./packages/types
        run: bun install

      - name: Build types package
        working-directory: ./packages/types
        run: bun run build

      - name: Cache dependencies
        run: deno task cache

      - name: Format check
        run: deno fmt --check

      # - name: Lint
      #   run: deno lint

      - name: Run tests
        run: deno task test

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Needed for Deno Deploy authentication
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install types package dependencies
        working-directory: ./packages/types
        run: bun install

      - name: Build types package
        working-directory: ./packages/types
        run: bun run build

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: 'open-crosspost-proxy-dev'
          entrypoint: 'main.ts'
          import-map: './deno.json'
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
          ENVIRONMENT: production # staging
